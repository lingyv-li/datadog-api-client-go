/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// DashboardSearchSummary Dashboard search summary response.
type DashboardSearchSummary struct {
	Total *int32 `json:"total,omitempty"`
	// List of dashboard definitions.
	Dashboards *[]DashboardSearchSummaryDefinition `json:"dashboards,omitempty"`
	// UnparsedObject contains the raw value of the object if there was an error when deserializing into the struct
	UnparsedObject map[string]interface{} `json:-`
}

// NewDashboardSearchSummary instantiates a new DashboardSearchSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardSearchSummary() *DashboardSearchSummary {
	this := DashboardSearchSummary{}
	return &this
}

// NewDashboardSearchSummaryWithDefaults instantiates a new DashboardSearchSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardSearchSummaryWithDefaults() *DashboardSearchSummary {
	this := DashboardSearchSummary{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DashboardSearchSummary) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSearchSummary) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DashboardSearchSummary) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *DashboardSearchSummary) SetTotal(v int32) {
	o.Total = &v
}

// GetDashboards returns the Dashboards field value if set, zero value otherwise.
func (o *DashboardSearchSummary) GetDashboards() []DashboardSearchSummaryDefinition {
	if o == nil || o.Dashboards == nil {
		var ret []DashboardSearchSummaryDefinition
		return ret
	}
	return *o.Dashboards
}

// GetDashboardsOk returns a tuple with the Dashboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSearchSummary) GetDashboardsOk() (*[]DashboardSearchSummaryDefinition, bool) {
	if o == nil || o.Dashboards == nil {
		return nil, false
	}
	return o.Dashboards, true
}

// HasDashboards returns a boolean if a field has been set.
func (o *DashboardSearchSummary) HasDashboards() bool {
	if o != nil && o.Dashboards != nil {
		return true
	}

	return false
}

// SetDashboards gets a reference to the given []DashboardSearchSummaryDefinition and assigns it to the Dashboards field.
func (o *DashboardSearchSummary) SetDashboards(v []DashboardSearchSummaryDefinition) {
	o.Dashboards = &v
}

func (o DashboardSearchSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnparsedObject != nil {
		return json.Marshal(o.UnparsedObject)
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Dashboards != nil {
		toSerialize["dashboards"] = o.Dashboards
	}
	return json.Marshal(toSerialize)
}

func (o *DashboardSearchSummary) UnmarshalJSON(bytes []byte) (err error) {
	raw := map[string]interface{}{}
	all := struct {
		Total      *int32                              `json:"total,omitempty"`
		Dashboards *[]DashboardSearchSummaryDefinition `json:"dashboards,omitempty"`
	}{}
	err = json.Unmarshal(bytes, &all)
	if err != nil {
		err = json.Unmarshal(bytes, &raw)
		if err != nil {
			return err
		}
		o.UnparsedObject = raw
		return nil
	}
	o.Total = all.Total
	o.Dashboards = all.Dashboards
	return nil
}

type NullableDashboardSearchSummary struct {
	value *DashboardSearchSummary
	isSet bool
}

func (v NullableDashboardSearchSummary) Get() *DashboardSearchSummary {
	return v.value
}

func (v *NullableDashboardSearchSummary) Set(val *DashboardSearchSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardSearchSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardSearchSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardSearchSummary(val *DashboardSearchSummary) *NullableDashboardSearchSummary {
	return &NullableDashboardSearchSummary{value: val, isSet: true}
}

func (v NullableDashboardSearchSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardSearchSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
